#!/bin/bash
#
# Title:      PGBlitz (Reference Title File)
# Author(s):  Admin9705 - Deiteq
# URL:        https://pgblitz.com - http://github.pgblitz.com
# GNU:        General Public License v3.0
################################################################################
---
- hosts: localhost
  gather_facts: true
  tasks:

  - name: "Establish Facts"
    set_fact:
      switch: "on"
      updatecheck: "default"

  - name: "Docker Check"
    stat:
      path: "/usr/bin/docker"
    register: check

  - name: "Docker Version Check - True"
    shell: "docker --version | awk '{print $3}'"
    register: updatecheck

  - name: "Switch - On"
    set_fact:
      switch: "off"
    when: updatecheck.stdout == "18.09.2,"

  - name: Install required packages
    apt:
      name: "{{ packages }}"
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - software-properties-common
    when: switch == "on"

  - name: Add official gpg signing key
    apt_key:
      id: 0EBFCD88
      url: https://download.docker.com/linux/ubuntu/gpg
    when: switch == "on"

  - name: "Stop All Containers"
    shell: "docker stop $(docker ps -a -q)"
    ignore_errors: yes
    when:
      - check.stat.exists == True
      - switch == "on"

  - name: Official Repo
    apt_repository:
      repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu jammy stable"
    register: apt_docker_repositories
    when: switch == "on"

  - name: Update APT packages list
    apt:
      update_cache: yes
    when: apt_docker_repositories.changed and switch == "on"

  - name: Release docker-ce from hold
    dpkg_selections:
      name: docker-ce
      selection: install
    when: switch == "on"

  - name: Install docker-ce
    apt:
      name: docker-ce
      state: latest
      update_cache: yes
    when: switch == "on"

  - name: Put docker-ce into hold
    dpkg_selections:
      name: docker-ce
      selection: hold
    when: switch == "on"

  - name: Uninstall docker-py pip module
    pip:
      name: docker-py
      state: absent
    ignore_errors: yes
    when: switch == "on"

  - name: Install docker pip module
    pip:
      name: docker
      state: latest
    ignore_errors: yes
    when: switch == "on"

  - name: Check docker daemon.json exists
    stat:
      path: /etc/docker/daemon.json
    register: docker_daemon

  - name: Stop docker to enable overlay2
    systemd:
      state: stopped
      name: docker
      enabled: yes
    when:
      - docker_daemon.stat.exists == False
      - switch == "on"

  - name: Import daemon.json
    copy:
      src: /pg/stage/ymls/templates/daemon.json
      dest: /etc/docker/daemon.json
      force: yes
      mode: 0775
    when:
      - docker_daemon.stat.exists == False
      - switch == "on"

  - name: Start docker (Please Wait)
    systemd:
      state: started
      name: docker
      enabled: yes
    when:
      - docker_daemon.stat.exists == False
      - switch == "on"

  - name: "Wait for 15 seconds before commencing"
    wait_for:
      timeout: 15
    when: switch == "on"

  - name: Check override folder exists
    stat:
      path: /etc/systemd/system/docker.service.d
    register: docker_override

  - name: Create override folder
    file:
      path: /etc/systemd/system/docker.service.d
      state: directory
      mode: 0775
    when:
      - docker_override.stat.exists == False
      - switch == "on"
    tags: docker_standard

  - name: Import override file
    copy:
      src: /pg/stage/ymls/templates/override.conf
      dest: /etc/systemd/system/docker.service.d/override.conf
      force: yes
      mode: 0775
    tags: docker_standard
    when: switch == "on"

  - name: create plexguide network
    docker_network:
      name: "plexguide"
      state: present
    tags: docker_standard
    when: switch == "on"

  - name: "Start All Containers"
    shell: "docker start $(docker ps -a -q)"
    ignore_errors: yes
    when:
      - switch == "on"
      - check.stat.exists == True
